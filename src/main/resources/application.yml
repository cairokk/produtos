server:
  port: ${SERVER_PORT:8083}

spring:
  application:
    name: produtos

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    properties:
      hibernate.format_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_BROKER}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${KAFKA_GROUP}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.unifor.consumidor.event.NovoPedidoEvent
    listener:
      ack-mode: record
      missing-topics-fatal: false

eureka:
  client:
    service-url:
      defaultZone: http://eureka-service:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

springdoc:
  api-docs:
    title: Protudos Service API
    description: Microservi√ßo de produtos
